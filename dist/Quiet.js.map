{"version":3,"file":"Quiet.js","mappings":"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","sources":["webpack://Quiet/webpack/universalModuleDefinition","webpack://Quiet/webpack/bootstrap","webpack://Quiet/webpack/runtime/define property getters","webpack://Quiet/webpack/runtime/hasOwnProperty shorthand","webpack://Quiet/webpack/runtime/make namespace object","webpack://Quiet/./src/Module.ts","webpack://Quiet/./src/Receiver.ts","webpack://Quiet/./src/util.ts","webpack://Quiet/./src/Quiet.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Quiet\"] = factory();\n\telse\n\t\troot[\"Quiet\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {Quiet} from \"./Quiet\";\n\nexport const Module:any = {\n    onRuntimeInitialized: function(){\n        console.log(\"onRuntimeInitialized\", ...arguments)\n    },\n    locateFile: function(filename: string, emPathFolder?: string){\n        // https://yunxin-g2-assets.oss-cn-hangzhou.aliyuncs.com\n        console.log(\"locateFile\", filename, ...arguments)\n        if (!emPathFolder){\n            emPathFolder = \"https://yunxin-g2-assets.oss-cn-hangzhou.aliyuncs.com/quiet-webrtc/\"\n        }\n        return emPathFolder + filename\n    }\n};\n\n(window as any).Module = Module\n","import {FrameStats, QuietProfile, ReceiverOptions} from \"./interfaces\";\nimport {Quiet} from \"./Quiet\";\nimport {Module} from \"./Module\";\n\nexport class Receiver{\n    profile: QuietProfile;\n    c_profiles: number[];\n    c_profile: number[];\n    opts: ReceiverOptions;\n    opt: ReceiverOptions;\n\n    audioStream: MediaStream;\n    audioInput: AudioNode;\n    private quiet: Quiet;\n    inited: boolean = false;\n    private samples: number = 0;\n    private frame: any;\n    private lastChecksumFailCount: number = 0;\n    private last_consume_times: number[] = [];\n    private num_consume_times: number = 0;\n    private scriptProcessor: ScriptProcessorNode;\n    private sample_view: Float32Array = new Float32Array();\n    private audioDestination: MediaStreamAudioDestinationNode;\n    private idx: number = 0;\n    private decoder: any;\n\n    constructor(opts: ReceiverOptions) {\n        this.quiet = opts.quiet\n        this.profile = opts.profile;\n\n        this.c_profiles = Module.intArrayFromString(JSON.stringify({\"profile\": this.profile}));\n        this.c_profile = Module.intArrayFromString(\"profile\");\n\n        this.opts = opts\n        this.opt = Module.ccall('quiet_decoder_profile_str', 'pointer', ['array', 'array'], [this.c_profiles, this.c_profile]);\n        // inform quiet about our local sound card's sample rate so that it can resample to its internal sample rate\n        this.decoder = Module.ccall('quiet_decoder_create', 'pointer', ['pointer', 'number'], [this.opt, this.quiet.audioCtx.sampleRate]);\n\n        this.audioStream = opts.audioStream\n        this.audioInput = this.quiet.audioCtx.createMediaStreamSource(this.audioStream)\n        this.audioDestination = this.quiet.audioCtx.createMediaStreamDestination()\n\n        this.scriptProcessor = this.initScriptProcessor()\n\n        this.audioInput.connect(this.scriptProcessor);\n        this.scriptProcessor.connect(this.audioDestination)\n\n        this.init()\n\n    }\n\n    init(){\n\n        Module.ccall('free', null, ['pointer'], [this.opt]);\n\n        this.samples = Module.ccall('malloc', 'pointer', ['number'], [4 * this.quiet.sampleBufferSize]);\n\n        this.frame = Module.ccall('malloc', 'pointer', ['number'], [this.quiet.frameBufferSize]);\n\n        if (this.opts.onReceiverStatsUpdate !== undefined) {\n            Module.ccall('quiet_decoder_enable_stats', null, ['pointer'], [this.decoder]);\n        }\n\n        // 代替destroyed\n        this.inited = true;\n\n        this.lastChecksumFailCount = 0;\n        this.last_consume_times = [];\n        this.num_consume_times = 3;\n\n    }\n\n    readbuf() {\n        if (!this.inited) {\n            return;\n        }\n        while (true) {\n            var read = Module.ccall('quiet_decoder_recv', 'number', ['pointer', 'pointer', 'number'], [this.decoder, this.frame, this.quiet.frameBufferSize]);\n            if (read === -1) {\n                break;\n            }\n            // convert from emscripten bytes to js string. more pointer arithmetic.\n            const frameArray = Module.HEAP8.slice(this.frame, this.frame + read);\n            this.opts.onReceive(frameArray.buffer);\n        }\n    }\n\n    consume() {\n        if (!this.inited) {\n            return;\n        }\n        const before = Date.now();\n        Module.ccall('quiet_decoder_consume', 'number', ['pointer', 'pointer', 'number'], [this.decoder, this.samples, this.quiet.sampleBufferSize]);\n        const after = Date.now();\n\n        this.last_consume_times.unshift(after - before);\n        if (this.last_consume_times.length > this.num_consume_times) {\n            this.last_consume_times.pop();\n        }\n\n        window.setTimeout(()=>{\n            this.readbuf()\n        }, 0);\n\n        const currentChecksumFailCount = Module.ccall('quiet_decoder_checksum_fails', 'number', ['pointer'], [this.decoder]);\n\n        setTimeout(()=>{\n            if (currentChecksumFailCount > this.lastChecksumFailCount){\n                this.lastChecksumFailCount = currentChecksumFailCount;\n                if (this.opts.onReceiveFail) {\n                    this.opts.onReceiveFail(currentChecksumFailCount);\n                }else{\n                    console.error(\"onReceiveFail\", currentChecksumFailCount);\n                }\n            }\n        }, 0)\n\n        if (this.opts.onReceiverStatsUpdate) {\n\n            var num_frames_ptr = Module.ccall('malloc', 'pointer', ['number'], [4]);\n            var frames = Module.ccall('quiet_decoder_consume_stats', 'pointer', ['pointer', 'pointer'], [this.decoder, num_frames_ptr]);\n            // time for some more pointer arithmetic\n            var num_frames = Module.HEAPU32[num_frames_ptr/4];\n            Module.ccall('free', null, ['pointer'], [num_frames_ptr]);\n\n            var framesize = 4 + 4 + 4 + 4 + 4;\n            var stats = [];\n\n            for (var i = 0; i < num_frames; i++) {\n                var frame = (frames + i*framesize)/4;\n                var symbols = Module.HEAPU32[frame];\n                var num_symbols = Module.HEAPU32[frame + 1];\n                const frameStats:FrameStats = {\n                    errorVectorMagnitude: Module.HEAPF32[frame + 2],\n                    receivedSignalStrengthIndicator: Module.HEAPF32[frame + 3],\n                    symbols: [],\n                }\n\n                for (var j = 0; j < num_symbols; j++) {\n                    var symbol = (symbols + 8*j)/4;\n                    frameStats.symbols.push({\n                        real: Module.HEAPF32[symbol],\n                        imag: Module.HEAPF32[symbol + 1]\n                    });\n                }\n                stats.push(frameStats);\n            }\n            this.opts.onReceiverStatsUpdate(stats);\n        }\n    }\n\n    initScriptProcessor(){\n        if (this.inited){\n            throw new Error(\"Not inited\")\n        }\n        // TODO investigate if this still needs to be placed on window.\n        // seems this was done to keep it from being collected\n        const scriptProcessor = this.quiet.audioCtx.createScriptProcessor(this.quiet.sampleBufferSize, 2, 1);\n        this.idx = this.quiet.receivers_idx;\n        this.quiet.receivers[this.idx] = this.scriptProcessor;\n        this.quiet.receivers_idx++;\n\n        scriptProcessor.onaudioprocess = (e:AudioProcessingEvent) => {\n            if (!this.inited) {\n                return;\n            }\n            var input = e.inputBuffer.getChannelData(0);\n            this.sample_view = Module.HEAPF32.subarray(this.samples/4, this.samples/4 + this.quiet.sampleBufferSize);\n            this.sample_view.set(input);\n\n            window.setTimeout(()=>{\n                this.consume()\n            }, 0);\n        }\n        return scriptProcessor;\n    }\n\n    destroy(){\n        if (!this.inited) {\n            return;\n        }\n        this.scriptProcessor.disconnect();\n        Module.ccall('free', null, ['pointer'], [this.samples]);\n        Module.ccall('free', null, ['pointer'], [this.frame]);\n        // 不要释放decoder\n        // Module.ccall('quiet_decoder_destroy', null, ['pointer'], [this.quiet.decoder]);\n        delete this.quiet.receivers[this.idx];\n        this.inited = false;\n    }\n\n    getAverageDecodeTime () {\n        if (this.last_consume_times.length === 0) {\n            return 0;\n        }\n        var total = 0;\n        for (var i = 0; i < this.last_consume_times.length; i++) {\n            total += this.last_consume_times[i];\n        }\n        return total/(this.last_consume_times.length);\n    };\n}\n","\n/**\n * Convert an array buffer in UTF8 to string\n * @function ab2str\n * @memberof Quiet\n * @param {ArrayBuffer} ab - array buffer to be converted\n * @returns {string} s - converted string\n */\n\nlet textEncoder: TextEncoder|null = null;\nlet textDecoder: TextDecoder|null = null;\n\nexport function ab2str(ab: ArrayBuffer) {\n    if (!textDecoder){\n        textDecoder = new TextDecoder()\n    }\n    return textDecoder.decode(ab)\n}\n\nexport function str2ab(str: string) {\n    if (!textEncoder){\n        textEncoder = new TextEncoder()\n    }\n    return textEncoder.encode(str)\n}\n\nexport function mergeab(ab1:ArrayBuffer, ab2:ArrayBuffer) {\n    var tmp = new Uint8Array(ab1.byteLength + ab2.byteLength);\n    tmp.set(new Uint8Array(ab1), 0);\n    tmp.set(new Uint8Array(ab2), ab1.byteLength);\n    return tmp.buffer;\n}\n","import {QuietInitOptions, QuietProfile, ReceiverOptionsInput} from \"./interfaces\";\nimport {Module} from \"./Module\"\nimport {Receiver} from \"./Receiver\";\nimport {ab2str} from \"./util\";\n\n// 同一个Quiet对象使用同样的AudioContext和wasm实例\nexport class Quiet{\n    emscriptenInitialized = false;\n    inited = false;\n    profiles: {\n        [profileName: string]: QuietProfile\n    } = {}\n    audioCtx: AudioContext\n\n    // these are used for receiver only\n    // audioInput: MediaStreamAudioSourceNode;\n    // audioInputFailedReason:string = \"\";\n    // audioInputReadyCallbacks: ((...any)=> void)[] = [];\n    // audioInputFailedCallbacks: ((...any)=> void)[] = [];\n    frameBufferSize = Math.pow(2, 14);\n\n    // anti-gc\n    receivers: {[idx: number]: ScriptProcessorNode} = {};\n    receivers_idx:number = 0;\n\n    sampleBufferSize = 16384;\n\n    constructor(options?: AudioContextOptions) {\n        if (window.AudioContext){\n            this.audioCtx = new AudioContext(options)\n        }else{\n            // @ts-ignore\n            this.audioCtx = new webkitAudioContext(options)\n        }\n    }\n\n    async init(options: QuietInitOptions){\n        this.profiles = options.profiles\n        this.inited = true\n        this.resume()\n        await InitRuntime()\n    }\n\n    async resume(){\n        if (this.audioCtx.state === \"suspended\"){\n            await this.audioCtx.resume()\n        }\n    }\n\n    async receiver(receiverOptionsInput: ReceiverOptionsInput){\n        const audioStream = receiverOptionsInput.audioStream\n            || await navigator.mediaDevices.getUserMedia({\n            audio: {\n                echoCancellation: false,\n                noiseSuppression: false,\n                autoGainControl: false\n            }\n        })\n        const onReceive = receiverOptionsInput.onReceive || function(arrayBuffer){\n            console.log(\"onReceive\", receiverOptionsInput.profileName, ab2str(arrayBuffer))\n        }\n\n        const profile = this.profiles[receiverOptionsInput.profileName];\n        if (!profile){\n            throw new Error(`Cannot find profile [${receiverOptionsInput.profileName}]. Available profileNames: ${Object.keys(this.profiles).join()}`)\n        }\n\n        const receiverOptions = {\n            profile,\n            audioStream,\n            quiet: this,\n            onReceive,\n\n            onReceiveFail: receiverOptionsInput.onReceiveFail,\n            onReceiverStatsUpdate: receiverOptionsInput.onReceiverStatsUpdate,\n        }\n        receiverOptions.quiet = this;\n        const receiver = new Receiver(receiverOptions)\n        return receiver;\n    }\n}\n\nlet initStatus:\"UNINIT\"|\"INITING\"|\"INITED\" = \"UNINIT\"\nconst runtimeInitCallbacks: any[] = [];\n\nexport async function InitRuntime(){\n    if (initStatus === \"INITED\"){\n        return\n    }\n    return new Promise((resolve)=>{\n        runtimeInitCallbacks.push(resolve);\n        if (initStatus === \"UNINIT\"){\n            initStatus = \"INITING\"\n            const start = Date.now()\n            const elem = document.createElement('script')\n            elem.async = true\n            elem.src = Module.locateFile('quiet-emscripten.js')\n            document.body.appendChild(elem);\n            Module.onRuntimeInitialized = function(){\n                initStatus = \"INITED\";\n                console.log(\"onRuntimeInitialized\", Date.now() - start);\n                runtimeInitCallbacks.forEach((resolve)=>{\n                    resolve()\n                })\n            }\n        }\n    })\n}\n\nexport {\n    Module\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Module","onRuntimeInitialized","console","log","arguments","locateFile","filename","emPathFolder","window","Receiver","constructor","opts","inited","samples","lastChecksumFailCount","last_consume_times","num_consume_times","sample_view","Float32Array","idx","this","quiet","profile","c_profiles","intArrayFromString","JSON","stringify","c_profile","opt","ccall","decoder","audioCtx","sampleRate","audioStream","audioInput","createMediaStreamSource","audioDestination","createMediaStreamDestination","scriptProcessor","initScriptProcessor","connect","init","sampleBufferSize","frame","frameBufferSize","undefined","onReceiverStatsUpdate","readbuf","read","frameArray","HEAP8","slice","onReceive","buffer","consume","before","Date","now","after","unshift","length","pop","setTimeout","currentChecksumFailCount","onReceiveFail","error","num_frames_ptr","frames","num_frames","HEAPU32","stats","i","symbols","num_symbols","frameStats","errorVectorMagnitude","HEAPF32","receivedSignalStrengthIndicator","j","symbol","push","real","imag","Error","createScriptProcessor","receivers_idx","receivers","onaudioprocess","e","input","inputBuffer","getChannelData","subarray","set","destroy","disconnect","getAverageDecodeTime","total","textDecoder","Quiet","options","emscriptenInitialized","profiles","Math","pow","AudioContext","webkitAudioContext","async","resume","InitRuntime","state","receiverOptionsInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","arrayBuffer","ab","profileName","TextDecoder","decode","keys","join","receiverOptions","initStatus","runtimeInitCallbacks","Promise","resolve","start","elem","document","createElement","src","body","appendChild","forEach"],"sourceRoot":""}