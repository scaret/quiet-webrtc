{"version":3,"file":"Quiet.js","mappings":"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","sources":["webpack://Quiet/webpack/universalModuleDefinition","webpack://Quiet/./node_modules/eventemitter3/index.js","webpack://Quiet/webpack/bootstrap","webpack://Quiet/webpack/runtime/define property getters","webpack://Quiet/webpack/runtime/hasOwnProperty shorthand","webpack://Quiet/webpack/runtime/make namespace object","webpack://Quiet/./src/Module.ts","webpack://Quiet/./src/util.ts","webpack://Quiet/./src/Receiver.ts","webpack://Quiet/./src/Transmitter.ts","webpack://Quiet/./src/Quiet.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Quiet\"] = factory();\n\telse\n\t\troot[\"Quiet\"] = factory();\n})(self, function() {\nreturn ","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {Quiet} from \"./Quiet\";\n\nexport const Module:any = {\n    onRuntimeInitialized: function(){\n        console.log(\"onRuntimeInitialized\", ...arguments)\n    },\n    locateFile: function(filename: string, emPathFolder?: string){\n        // https://yunxin-g2-assets.oss-cn-hangzhou.aliyuncs.com\n        console.log(\"locateFile\", filename, ...arguments)\n        if (!emPathFolder){\n            emPathFolder = \"https://yunxin-g2-assets.oss-cn-hangzhou.aliyuncs.com/quiet-webrtc/\"\n        }\n        return emPathFolder + filename\n    }\n};\n\n(window as any).Module = Module\n","\n/**\n * Convert an array buffer in UTF8 to string\n * @function ab2str\n * @memberof Quiet\n * @param {ArrayBuffer} ab - array buffer to be converted\n * @returns {string} s - converted string\n */\n\nlet textEncoder: TextEncoder|null = null;\nlet textDecoder: TextDecoder|null = null;\n\nexport function ab2str(ab: ArrayBuffer) {\n    if (!textDecoder){\n        textDecoder = new TextDecoder()\n    }\n    return textDecoder.decode(ab)\n}\n\nexport function str2ab(str: string) {\n    if (!textEncoder){\n        textEncoder = new TextEncoder()\n    }\n    return textEncoder.encode(str)\n}\n\nexport function mergeab(ab1:ArrayBuffer, ab2:ArrayBuffer) {\n    var tmp = new Uint8Array(ab1.byteLength + ab2.byteLength);\n    tmp.set(new Uint8Array(ab1), 0);\n    tmp.set(new Uint8Array(ab2), ab1.byteLength);\n    return tmp.buffer;\n}\n","import {FrameStats, QuietProfile, ReceiverOptions} from \"./interfaces\";\nimport {Quiet} from \"./Quiet\";\nimport {Module} from \"./Module\";\n\nexport class Receiver{\n    profile: QuietProfile;\n    c_profiles: number[];\n    c_profile: number[];\n    opts: ReceiverOptions;\n    opt: ReceiverOptions;\n\n    audioStreams: MediaStream[];\n    audioInputs: AudioNode[];\n    private quiet: Quiet;\n    inited: boolean = false;\n    private samples: number = 0;\n    private frame: any;\n    private lastChecksumFailCount: number = 0;\n    private last_consume_times: number[] = [];\n    private num_consume_times: number = 0;\n    private scriptProcessor: ScriptProcessorNode;\n    private sample_view: Float32Array = new Float32Array();\n    private audioDestination: MediaStreamAudioDestinationNode;\n    private idx: number = 0;\n    private decoder: any;\n\n    constructor(opts: ReceiverOptions) {\n        this.quiet = opts.quiet\n        this.profile = opts.profile;\n\n        this.c_profiles = Module.intArrayFromString(JSON.stringify({\"profile\": this.profile}));\n        this.c_profile = Module.intArrayFromString(\"profile\");\n\n        this.opts = opts\n        this.opt = Module.ccall('quiet_decoder_profile_str', 'pointer', ['array', 'array'], [this.c_profiles, this.c_profile]);\n        // inform quiet about our local sound card's sample rate so that it can resample to its internal sample rate\n        this.decoder = Module.ccall('quiet_decoder_create', 'pointer', ['pointer', 'number'], [this.opt, this.quiet.audioCtx.sampleRate]);\n\n        this.audioDestination = this.quiet.audioCtx.createMediaStreamDestination()\n        this.scriptProcessor = this.initScriptProcessor()\n\n        this.audioStreams = opts.audioStreams\n        this.audioInputs = []\n        this.audioStreams.forEach((audioStream)=>{\n            this.addAudioStream(audioStream)\n        })\n        this.scriptProcessor.connect(this.audioDestination)\n\n        this.init()\n\n    }\n\n    addAudioStream(audioStream: MediaStream){\n        const audioInput = this.quiet.audioCtx.createMediaStreamSource(audioStream)\n        this.audioInputs.push(audioInput)\n        if (this.audioStreams.indexOf(audioStream) === -1){\n            this.audioStreams.push(audioStream)\n        }\n        audioInput.connect(this.scriptProcessor);\n    }\n\n    init(){\n\n        Module.ccall('free', null, ['pointer'], [this.opt]);\n\n        this.samples = Module.ccall('malloc', 'pointer', ['number'], [4 * this.quiet.sampleBufferSize]);\n\n        this.frame = Module.ccall('malloc', 'pointer', ['number'], [this.quiet.frameBufferSize]);\n\n        if (this.opts.onReceiverStatsUpdate !== undefined) {\n            Module.ccall('quiet_decoder_enable_stats', null, ['pointer'], [this.decoder]);\n        }\n\n        // 代替destroyed\n        this.inited = true;\n\n        this.lastChecksumFailCount = 0;\n        this.last_consume_times = [];\n        this.num_consume_times = 3;\n\n    }\n\n    readbuf() {\n        if (!this.inited) {\n            return;\n        }\n        while (true) {\n            var read = Module.ccall('quiet_decoder_recv', 'number', ['pointer', 'pointer', 'number'], [this.decoder, this.frame, this.quiet.frameBufferSize]);\n            if (read === -1) {\n                break;\n            }\n            // convert from emscripten bytes to js string. more pointer arithmetic.\n            const frameArray = Module.HEAP8.slice(this.frame, this.frame + read);\n            this.opts.onReceive(frameArray.buffer);\n        }\n    }\n\n    consume() {\n        if (!this.inited) {\n            return;\n        }\n        const before = Date.now();\n        Module.ccall('quiet_decoder_consume', 'number', ['pointer', 'pointer', 'number'], [this.decoder, this.samples, this.quiet.sampleBufferSize]);\n        const after = Date.now();\n\n        this.last_consume_times.unshift(after - before);\n        if (this.last_consume_times.length > this.num_consume_times) {\n            this.last_consume_times.pop();\n        }\n\n        window.setTimeout(()=>{\n            this.readbuf()\n        }, 0);\n\n        const currentChecksumFailCount = Module.ccall('quiet_decoder_checksum_fails', 'number', ['pointer'], [this.decoder]);\n\n        setTimeout(()=>{\n            if (currentChecksumFailCount > this.lastChecksumFailCount){\n                this.lastChecksumFailCount = currentChecksumFailCount;\n                if (this.opts.onReceiveFail) {\n                    this.opts.onReceiveFail(currentChecksumFailCount);\n                }else{\n                    console.error(\"onReceiveFail\", currentChecksumFailCount);\n                }\n            }\n        }, 0)\n\n        if (this.opts.onReceiverStatsUpdate) {\n\n            var num_frames_ptr = Module.ccall('malloc', 'pointer', ['number'], [4]);\n            var frames = Module.ccall('quiet_decoder_consume_stats', 'pointer', ['pointer', 'pointer'], [this.decoder, num_frames_ptr]);\n            // time for some more pointer arithmetic\n            var num_frames = Module.HEAPU32[num_frames_ptr/4];\n            Module.ccall('free', null, ['pointer'], [num_frames_ptr]);\n\n            var framesize = 4 + 4 + 4 + 4 + 4;\n            var stats = [];\n\n            for (var i = 0; i < num_frames; i++) {\n                var frame = (frames + i*framesize)/4;\n                var symbols = Module.HEAPU32[frame];\n                var num_symbols = Module.HEAPU32[frame + 1];\n                const frameStats:FrameStats = {\n                    errorVectorMagnitude: Module.HEAPF32[frame + 2],\n                    receivedSignalStrengthIndicator: Module.HEAPF32[frame + 3],\n                    symbols: [],\n                }\n\n                for (var j = 0; j < num_symbols; j++) {\n                    var symbol = (symbols + 8*j)/4;\n                    frameStats.symbols.push({\n                        real: Module.HEAPF32[symbol],\n                        imag: Module.HEAPF32[symbol + 1]\n                    });\n                }\n                stats.push(frameStats);\n            }\n            this.opts.onReceiverStatsUpdate(stats);\n        }\n    }\n\n    initScriptProcessor(){\n        if (this.inited){\n            throw new Error(\"Not inited\")\n        }\n        // TODO investigate if this still needs to be placed on window.\n        // seems this was done to keep it from being collected\n        const scriptProcessor = this.quiet.audioCtx.createScriptProcessor(this.quiet.sampleBufferSize, 2, 1);\n        this.idx = this.quiet.receivers_idx;\n        this.quiet.receivers[this.idx] = this.scriptProcessor;\n        this.quiet.receivers_idx++;\n\n        scriptProcessor.onaudioprocess = (e:AudioProcessingEvent) => {\n            if (!this.inited) {\n                return;\n            }\n            var input = e.inputBuffer.getChannelData(0);\n            this.sample_view = Module.HEAPF32.subarray(this.samples/4, this.samples/4 + this.quiet.sampleBufferSize);\n            this.sample_view.set(input);\n\n            window.setTimeout(()=>{\n                this.consume()\n            }, 0);\n        }\n        return scriptProcessor;\n    }\n\n    destroy(){\n        if (!this.inited) {\n            return;\n        }\n        this.scriptProcessor.disconnect();\n        Module.ccall('free', null, ['pointer'], [this.samples]);\n        Module.ccall('free', null, ['pointer'], [this.frame]);\n        // 不要释放decoder\n        // Module.ccall('quiet_decoder_destroy', null, ['pointer'], [this.quiet.decoder]);\n        delete this.quiet.receivers[this.idx];\n        this.inited = false;\n    }\n\n    getAverageDecodeTime () {\n        if (this.last_consume_times.length === 0) {\n            return 0;\n        }\n        var total = 0;\n        for (var i = 0; i < this.last_consume_times.length; i++) {\n            total += this.last_consume_times[i];\n        }\n        return total/(this.last_consume_times.length);\n    };\n}\n","import {QuietProfile, TransmitterOptions} from \"./interfaces\";\nimport {Module} from \"./Module\";\nimport {Quiet} from \"./Quiet\";\nimport {str2ab} from \"./util\";\nimport { EventEmitter } from \"eventemitter3\";\n\nexport class Transmitter extends EventEmitter{\n    profileObj: QuietProfile\n    done: ()=>void\n    clampFrame: boolean\n\n    opt: string;\n\n    c_profiles: number[];\n    c_profile: number[];\n    private encoder: any;\n    private quiet: Quiet;\n\n    running: boolean = false\n\n    inited: boolean = true\n\n    private sample_view: Float32Array;\n    private samplesToPlay:Float32Array[] = [];\n    private emptySample: Float32Array;\n\n    private payload: ArrayBuffer[] = [];\n    private opts: TransmitterOptions;\n    private samples: number = 0;\n    private last_emit_times: number[] = [];\n    private num_emit_times: number = 3;\n    private empties_written: number = 0;\n    private scriptNode: ScriptProcessorNode;\n    private mediaStreamDestination: MediaStreamAudioDestinationNode;\n    private dummy_osc: OscillatorNode;\n    private frame_len: number;\n    private stream: MediaStream;\n    //表示scriptNode是否在播放。\n    private playing = false;\n    private paused = false;\n\n    constructor(opts: TransmitterOptions) {\n        super()\n        this.opts = opts\n        this.profileObj = opts.profile\n        this.quiet = opts.quiet\n        this.clampFrame = opts.clampFrame\n\n        this.c_profiles = Module.intArrayFromString(JSON.stringify({\"profile\": this.profileObj}));\n        this.c_profile = Module.intArrayFromString(\"profile\");\n\n        this.done = opts.onFinish\n\n        this.opt = Module.ccall('quiet_encoder_profile_str', 'pointer', ['array', 'array'], [this.c_profiles, this.c_profile]);\n\n        // libquiet internally works at 44.1kHz but the local sound card\n        // may be a different rate. we inform quiet about that here\n        this.encoder = Module.ccall('quiet_encoder_create', 'pointer', ['pointer', 'number'], [this.opt, this.quiet.audioCtx.sampleRate]);\n\n        Module.ccall('free', null, ['pointer'], [this.opt]);\n\n        this.frame_len = 0;\n        if (this.clampFrame) {\n            // enable close_frame which prevents data frames from overlapping multiple\n            // sample buffers. this is very convenient if our system is not fast enough\n            // to feed the sound card without any gaps between subsequent buffers due\n            // to e.g. gc pause. inform quiet about our sample buffer size here\n            this.frame_len = Module.ccall('quiet_encoder_clamp_frame_len', 'number', ['pointer', 'number'], [this.encoder, this.quiet.sampleBufferSize]);\n        } else {\n            this.frame_len = Module.ccall('quiet_encoder_get_frame_len', 'number', ['pointer'], [this.encoder]);\n        }\n        this.samples = Module.ccall('malloc', 'pointer', ['number'], [4 * this.quiet.sampleBufferSize]);\n\n        // yes, this is pointer arithmetic, in javascript :)\n        this.sample_view = Module.HEAPF32.subarray((this.samples/4), (this.samples/4) + this.quiet.sampleBufferSize);\n        this.emptySample = new Float32Array(this.sample_view.length)\n\n        //搬运自startTransmitter\n        const onaudioprocess = (e:AudioProcessingEvent) => {\n            const output_l = e.outputBuffer.getChannelData(0);\n            if (this.paused){\n                output_l.set(this.emptySample)\n            }else{\n                const sample = this.samplesToPlay.shift();\n                if (sample){\n                    if (!this.playing){\n                        this.emit('play-started')\n                        this.playing = true\n                    }\n                    output_l.set(sample)\n                }else{\n                    if (this.playing){\n                        this.emit('play-stopped')\n                        this.playing = false\n                    }\n                    output_l.set(this.emptySample)\n                }\n            }\n        }\n\n        // we want a single input because some implementations will not run a node without some kind of source\n        // we want two outputs so that we can explicitly silence the right channel and no mixing will occur\n        this.scriptNode = this.quiet.audioCtx.createScriptProcessor(this.quiet.sampleBufferSize, 1, 2)\n        this.scriptNode.onaudioprocess = onaudioprocess;\n        // put an input node on the graph. some browsers require this to run our script processor\n        // this oscillator will not actually be used in any way\n        this.dummy_osc = this.quiet.audioCtx.createOscillator();\n        this.dummy_osc.type = 'square';\n        this.dummy_osc.frequency.value = 420;\n        this.mediaStreamDestination = this.quiet.audioCtx.createMediaStreamDestination()\n        this.stream = this.mediaStreamDestination.stream\n    }\n\n    pause(){\n        //只pause完整的消息\n        this.paused = true\n    }\n\n    resume(){\n        this.paused = false\n    }\n\n    // 都是阻塞性同步方法，貌似没必要做async\n    async transmit(buf: ArrayBuffer){\n        //发送完后返回\n        if (!this.inited) {\n            return;\n        }\n        if (!buf.byteLength){\n            console.error(\"empty message\")\n            return;\n        }\n        while(true){\n            if (!this.paused && this.playing){\n                // 多次transmit混在一起则等待50毫秒\n                await new Promise((resolve)=>{\n                    setTimeout(resolve, 50);\n                })\n            }else{\n                break;\n            }\n        }\n        // slice up into frames and push the frames to a list\n        for (let i = 0; i < buf.byteLength; ) {\n            const frame = buf.slice(i, i + this.frame_len);\n            i += frame.byteLength;\n            this.payload.push(frame);\n        }\n        // now do an update. this may or may not write samples\n        this.writebuf();\n        this.readBuf();\n    }\n\n    transmitText(text: string){\n        const ab = str2ab(text)\n        return this.transmit(ab)\n    }\n\n    startTransmitter(){\n        if (!this.inited) {\n            return;\n        }\n        this.inited = true\n\n        this.dummy_osc.connect(this.scriptNode);\n        this.scriptNode.connect(this.mediaStreamDestination);\n        this.running = true;\n    }\n\n    writebuf() {\n        if (!this.inited) {\n            return;\n        }\n        // fill as much of quiet's transmit queue as possible\n        let frame_available = false;\n        let frame_written = false;\n        let counts = {\n            send: 0,\n            emit: 0,\n        }\n        while(true) {\n            const frame = this.payload.shift();\n            if (!frame) {\n                break;\n            }\n            frame_available = true;\n            const written = Module.ccall('quiet_encoder_send', 'number', ['pointer', 'array', 'number'], [this.encoder, new Uint8Array(frame), frame.byteLength]);\n            if (written === -1) {\n                this.payload.unshift(frame);\n                break;\n            }else{\n                counts.send++\n            }\n            frame_written = true;\n        }\n        // if (counts.send){\n        //     console.error(`编码请求${counts.send}帧`)\n        // }\n\n        if (!this.payload.length && frame_written) {\n            // we wrote at least one frame and emptied out payload, our local (js) tx queue\n            // this means we have transitioned to having all data in libquiet\n            // notify user about this if they like\n            // this is an important transition point because it allows user to control\n            // memory util without sacrificing throughput as would be the case for waiting\n            // for onFinish, which is only called after everything has flushed\n            if (this.opts.onEnqueue !== undefined) {\n                try{\n                    this.opts.onEnqueue();\n                }catch(e){\n                    console.error(e)\n                }\n            }\n        }\n\n        if (frame_available && !this.running) {\n            this.startTransmitter();\n        }\n    }\n\n    readBuf(){\n        // now set the sample block\n\n        while(true){\n            const before = Date.now();\n            const written = Module.ccall('quiet_encoder_emit', 'number', ['pointer', 'pointer', 'number'], [this.encoder, this.samples, this.quiet.sampleBufferSize]);\n            const after = Date.now();\n            // if (written !== -1){\n            //     console.error(\"编码返回1帧\")\n            // }\n\n            this.last_emit_times.unshift(after - before);\n            if (this.last_emit_times.length > this.num_emit_times) {\n                this.last_emit_times.pop();\n            }\n\n            // libquiet notifies us that the payload is finished by\n            // returning written < number of samples we asked for\n            if (written === -1) {\n                if (this.empties_written < 1) {\n                    // 没读到数据，但仍坚持播放3帧静音\n                    // flush out browser's sound sample buffer before quitting\n                    this.samplesToPlay.push(this.emptySample)\n                    this.empties_written++;\n                }else{\n                    // looks like we are done\n                    // user callback\n                    if (this.done !== undefined) {\n                        this.done();\n                    }\n                    if (this.running) {\n                        this.stopTransmitter();\n                    }\n                    break;\n                }\n            }else{\n                this.empties_written = 0;\n\n                const samples = new Float32Array(this.sample_view)\n                // in this case, we are sending data, but the whole block isn't full (we're near the end)\n                if (written < this.quiet.sampleBufferSize) {\n                    // be extra cautious and 0-fill what's left\n                    //   (we want the end of transmission to be silence, not potentially loud noise)\n                    for (let i = written; i < this.quiet.sampleBufferSize; i++) {\n                        samples[i] = 0;\n                    }\n                }\n                this.samplesToPlay.push(samples)\n            }\n        }\n    }\n\n    stopTransmitter() {\n        if (!this.inited) {\n            return;\n        }\n        // this.dummy_osc.disconnect(this.scriptNode);\n        // this.scriptNode.disconnect(this.mediaStreamDestination);\n        this.running = false;\n    }\n}\n","import {QuietInitOptions, QuietProfile, ReceiverOptionsInput, TransmitterOptionsInput} from \"./interfaces\";\nimport {Receiver} from \"./Receiver\";\nimport {ab2str} from \"./util\";\nimport {Transmitter} from \"./Transmitter\";\nimport {Module} from \"./Module\";\n\n// 同一个Quiet对象使用同样的AudioContext和wasm实例\nexport class Quiet{\n    emscriptenInitialized = false;\n    inited = false;\n    profiles: {\n        [profileName: string]: QuietProfile\n    } = {}\n    audioCtx: AudioContext\n\n    // these are used for receiver only\n    // audioInput: MediaStreamAudioSourceNode;\n    // audioInputFailedReason:string = \"\";\n    // audioInputReadyCallbacks: ((...any)=> void)[] = [];\n    // audioInputFailedCallbacks: ((...any)=> void)[] = [];\n    frameBufferSize = Math.pow(2, 14);\n\n    // anti-gc\n    receivers: {[idx: number]: ScriptProcessorNode} = {};\n    receivers_idx:number = 0;\n\n    sampleBufferSize = 16384;\n\n    constructor(options?: AudioContextOptions) {\n        if (window.AudioContext){\n            this.audioCtx = new AudioContext(options)\n        }else{\n            // @ts-ignore\n            this.audioCtx = new webkitAudioContext(options)\n        }\n    }\n\n    async init(options: QuietInitOptions){\n        this.profiles = options.profiles\n        this.inited = true\n        this.resume()\n        await InitRuntime()\n    }\n\n    async resume(){\n        if (this.audioCtx.state === \"suspended\"){\n            await this.audioCtx.resume()\n        }\n    }\n\n    async transmitter( transmitOptionsInput: TransmitterOptionsInput){\n        const onEnqueue = transmitOptionsInput.onEnqueue || function(){\n            console.log(\"transmitter.onEnqueue\", ...arguments)\n        }\n\n        const onFinish = transmitOptionsInput.onFinish || function(){\n            console.log(\"transmitter.onFinish\", ...arguments)\n        }\n\n        const profile = this.profiles[transmitOptionsInput.profileName];\n        if (!profile){\n            throw new Error(`Cannot find profile [${transmitOptionsInput.profileName}]. Available profileNames: ${Object.keys(this.profiles).join()}`)\n        }\n\n        const transmitterOptions = {\n            profile,\n            quiet: this,\n            clampFrame: transmitOptionsInput.clampFrame,\n\n            onEnqueue,\n            onFinish,\n        }\n        const transimitter = new Transmitter(transmitterOptions)\n        return transimitter;\n    }\n\n    async receiver(receiverOptionsInput: ReceiverOptionsInput){\n        const audioStreams = receiverOptionsInput.audioStreams\n            || [await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    echoCancellation: false,\n                    noiseSuppression: false,\n                    autoGainControl: false\n                }\n            })]\n        const onReceive = receiverOptionsInput.onReceive || function(arrayBuffer){\n            console.log(\"onReceive\", receiverOptionsInput.profileName, ab2str(arrayBuffer))\n        }\n\n        const profile = this.profiles[receiverOptionsInput.profileName];\n        if (!profile){\n            throw new Error(`Cannot find profile [${receiverOptionsInput.profileName}]. Available profileNames: ${Object.keys(this.profiles).join()}`)\n        }\n\n        const receiverOptions = {\n            profile,\n            audioStreams,\n            quiet: this,\n            onReceive,\n\n            onReceiveFail: receiverOptionsInput.onReceiveFail,\n            onReceiverStatsUpdate: receiverOptionsInput.onReceiverStatsUpdate,\n        }\n        receiverOptions.quiet = this;\n        const receiver = new Receiver(receiverOptions)\n        return receiver;\n    }\n}\n\nlet initStatus:\"UNINIT\"|\"INITING\"|\"INITED\" = \"UNINIT\"\nconst runtimeInitCallbacks: any[] = [];\n\nasync function InitRuntime(){\n    if (initStatus === \"INITED\"){\n        return\n    }\n    return new Promise((resolve)=>{\n        runtimeInitCallbacks.push(resolve);\n        if (initStatus === \"UNINIT\"){\n            initStatus = \"INITING\"\n            const start = Date.now()\n            const elem = document.createElement('script')\n            elem.async = true\n            elem.src = Module.locateFile('quiet-emscripten.js')\n            document.body.appendChild(elem);\n            Module.onRuntimeInitialized = function(){\n                initStatus = \"INITED\";\n                console.log(\"onRuntimeInitialized\", Date.now() - start);\n                runtimeInitCallbacks.forEach((resolve)=>{\n                    resolve()\n                })\n            }\n        }\n    })\n}\n"],"names":["root","factory","exports","module","define","amd","self","has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","value","Module","onRuntimeInitialized","console","log","locateFile","filename","emPathFolder","window","textEncoder","textDecoder","ab2str","ab","TextDecoder","decode","str2ab","str","TextEncoder","encode","mergeab","ab1","ab2","tmp","Uint8Array","byteLength","set","buffer","Receiver","constructor","opts","inited","samples","lastChecksumFailCount","last_consume_times","num_consume_times","sample_view","Float32Array","idx","quiet","profile","c_profiles","intArrayFromString","JSON","stringify","c_profile","opt","ccall","decoder","audioCtx","sampleRate","audioDestination","createMediaStreamDestination","scriptProcessor","initScriptProcessor","audioStreams","audioInputs","forEach","audioStream","addAudioStream","connect","init","audioInput","createMediaStreamSource","indexOf","sampleBufferSize","frame","frameBufferSize","onReceiverStatsUpdate","readbuf","read","frameArray","HEAP8","onReceive","consume","before","Date","now","after","unshift","pop","setTimeout","currentChecksumFailCount","onReceiveFail","error","num_frames_ptr","frames","num_frames","HEAPU32","stats","symbols","num_symbols","frameStats","errorVectorMagnitude","HEAPF32","receivedSignalStrengthIndicator","symbol","real","imag","Error","createScriptProcessor","receivers_idx","receivers","onaudioprocess","e","input","inputBuffer","getChannelData","subarray","destroy","disconnect","getAverageDecodeTime","total","Transmitter","super","running","samplesToPlay","payload","last_emit_times","num_emit_times","empties_written","playing","paused","profileObj","clampFrame","done","onFinish","encoder","frame_len","emptySample","scriptNode","output_l","outputBuffer","sample","shift","dummy_osc","createOscillator","type","frequency","mediaStreamDestination","stream","pause","resume","async","buf","Promise","resolve","writebuf","readBuf","transmitText","text","transmit","startTransmitter","frame_available","frame_written","counts","send","onEnqueue","written","stopTransmitter","Quiet","options","emscriptenInitialized","profiles","Math","pow","AudioContext","webkitAudioContext","initStatus","runtimeInitCallbacks","start","elem","document","createElement","src","body","appendChild","InitRuntime","state","transmitOptionsInput","profileName","keys","join","transmitterOptions","receiverOptionsInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","arrayBuffer","receiverOptions"],"sourceRoot":""}